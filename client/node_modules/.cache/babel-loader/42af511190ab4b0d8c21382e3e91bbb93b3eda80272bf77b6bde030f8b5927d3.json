{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\quinorslv\\\\quinors-app-frontend\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            user: {\n              id: 1,\n              email: credentials.email,\n              name: '사용자',\n              role: 'business'\n            },\n            token: 'fake-jwt-token'\n          });\n        }, 1000);\n      });\n      if (credentials.rememberMe) {\n        localStorage.setItem('token', response.token);\n      } else {\n        sessionStorage.setItem('token', response.token);\n      }\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      logout,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","AuthContext","initialState","isAuthenticated","user","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","login","credentials","response","Promise","resolve","setTimeout","id","email","name","role","token","rememberMe","localStorage","setItem","sessionStorage","message","logout","removeItem","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/project/quinorslv/quinors-app-frontend/client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'LOGIN_SUCCESS':\r\n      return { \r\n        ...state, \r\n        isAuthenticated: true, \r\n        user: action.payload, \r\n        loading: false, \r\n        error: null \r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return { \r\n        ...state, \r\n        isAuthenticated: false, \r\n        user: null, \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case 'LOGOUT':\r\n      return { \r\n        ...state, \r\n        isAuthenticated: false, \r\n        user: null, \r\n        loading: false, \r\n        error: null \r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  const login = async (credentials) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      const response = await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            user: {\r\n              id: 1,\r\n              email: credentials.email,\r\n              name: '사용자',\r\n              role: 'business'\r\n            },\r\n            token: 'fake-jwt-token'\r\n          });\r\n        }, 1000);\r\n      });\r\n\r\n      if (credentials.rememberMe) {\r\n        localStorage.setItem('token', response.token);\r\n      } else {\r\n        sessionStorage.setItem('token', response.token);\r\n      }\r\n\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\r\n      return response;\r\n    } catch (error) {\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: error.message });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      ...state,\r\n      login,\r\n      logout,\r\n      clearError\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}