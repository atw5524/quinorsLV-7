{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\quinorslv\\\\quinors-app-frontend\\\\client\\\\src\\\\context\\\\DeliveryContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryContext = /*#__PURE__*/createContext(null);\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  deliveryType: '',\n  originStore: null,\n  destinationStore: null,\n  deliveryInfo: null,\n  currentStep: 1\n};\nconst deliveryReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_DELIVERY_TYPE':\n      return {\n        ...state,\n        deliveryType: action.payload,\n        currentStep: 2\n      };\n    case 'SET_ORIGIN_STORE':\n      // 🎯 매장 정보와 선택된 부서 정보 모두 처리\n      if (typeof action.payload === 'object' && action.payload.store) {\n        // payload가 { store, selectedDepartment, selectedDepartmentIndex } 형태인 경우\n        return {\n          ...state,\n          originStore: {\n            ...action.payload.store,\n            selectedDepartment: action.payload.selectedDepartment,\n            selectedDepartmentIndex: action.payload.selectedDepartmentIndex\n          },\n          currentStep: 3\n        };\n      } else {\n        // payload가 단순히 store 객체인 경우 (기존 호환성)\n        return {\n          ...state,\n          originStore: action.payload,\n          currentStep: 3\n        };\n      }\n    case 'SET_DESTINATION_STORE':\n      // 🎯 매장 정보와 선택된 부서 정보 모두 처리\n      if (typeof action.payload === 'object' && action.payload.store) {\n        // payload가 { store, selectedDepartment, selectedDepartmentIndex } 형태인 경우\n        return {\n          ...state,\n          destinationStore: {\n            ...action.payload.store,\n            selectedDepartment: action.payload.selectedDepartment,\n            selectedDepartmentIndex: action.payload.selectedDepartmentIndex\n          },\n          currentStep: 4\n        };\n      } else {\n        // payload가 단순히 store 객체인 경우 (기존 호환성)\n        return {\n          ...state,\n          destinationStore: action.payload,\n          currentStep: 4\n        };\n      }\n    case 'SET_DELIVERY_INFO':\n      return {\n        ...state,\n        deliveryInfo: action.payload\n      };\n    case 'SET_STEP':\n      return {\n        ...state,\n        currentStep: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    case 'RESET':\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport const DeliveryProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(deliveryReducer, initialState);\n  const login = async credentials => {\n    try {\n      const response = await new Promise(resolve => {\n        setTimeout(() => {\n          resolve({\n            user: {\n              id: 1,\n              email: credentials.email,\n              name: '사용자',\n              role: 'business'\n            },\n            token: 'fake-jwt-token'\n          });\n        }, 1000);\n      });\n      if (credentials.rememberMe) {\n        localStorage.setItem('token', response.token);\n      } else {\n        sessionStorage.setItem('token', response.token);\n      }\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: response.user\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n\n  // 🎯 헬퍼 함수들 추가\n  const setOriginStore = (store, selectedDepartment = null, selectedDepartmentIndex = null) => {\n    dispatch({\n      type: 'SET_ORIGIN_STORE',\n      payload: {\n        store,\n        selectedDepartment,\n        selectedDepartmentIndex\n      }\n    });\n  };\n  const setDestinationStore = (store, selectedDepartment = null, selectedDepartmentIndex = null) => {\n    dispatch({\n      type: 'SET_DESTINATION_STORE',\n      payload: {\n        store,\n        selectedDepartment,\n        selectedDepartmentIndex\n      }\n    });\n  };\n  const contextValue = useMemo(() => ({\n    ...state,\n    dispatch,\n    login,\n    logout,\n    setOriginStore,\n    // 👈 헬퍼 함수 추가\n    setDestinationStore // 👈 헬퍼 함수 추가\n  }), [state]);\n  return /*#__PURE__*/_jsxDEV(DeliveryContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryProvider, \"KLvQelNBs/Ld5E3aV0blL/044PQ=\");\n_c = DeliveryProvider;\nexport const useDelivery = () => {\n  _s2();\n  const context = useContext(DeliveryContext);\n  if (!context) {\n    throw new Error('🚨 useDelivery must be used within DeliveryProvider!\\n' + '💡 Wrap your component with <DeliveryProvider>...</DeliveryProvider>');\n  }\n  return context;\n};\n_s2(useDelivery, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DeliveryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useMemo","jsxDEV","_jsxDEV","DeliveryContext","initialState","isAuthenticated","user","deliveryType","originStore","destinationStore","deliveryInfo","currentStep","deliveryReducer","state","action","type","payload","store","selectedDepartment","selectedDepartmentIndex","DeliveryProvider","children","_s","dispatch","login","credentials","response","Promise","resolve","setTimeout","id","email","name","role","token","rememberMe","localStorage","setItem","sessionStorage","error","logout","removeItem","setOriginStore","setDestinationStore","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDelivery","_s2","context","Error","$RefreshReg$"],"sources":["C:/project/quinorslv/quinors-app-frontend/client/src/context/DeliveryContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useMemo } from 'react';\r\n\r\nconst DeliveryContext = createContext(null);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  deliveryType: '',\r\n  originStore: null,\r\n  destinationStore: null,\r\n  deliveryInfo: null,\r\n  currentStep: 1\r\n};\r\n\r\nconst deliveryReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_DELIVERY_TYPE':\r\n      return { ...state, deliveryType: action.payload, currentStep: 2 };\r\n\r\n    case 'SET_ORIGIN_STORE':\r\n      // 🎯 매장 정보와 선택된 부서 정보 모두 처리\r\n      if (typeof action.payload === 'object' && action.payload.store) {\r\n        // payload가 { store, selectedDepartment, selectedDepartmentIndex } 형태인 경우\r\n        return { \r\n          ...state, \r\n          originStore: {\r\n            ...action.payload.store,\r\n            selectedDepartment: action.payload.selectedDepartment,\r\n            selectedDepartmentIndex: action.payload.selectedDepartmentIndex\r\n          }, \r\n          currentStep: 3 \r\n        };\r\n      } else {\r\n        // payload가 단순히 store 객체인 경우 (기존 호환성)\r\n        return { ...state, originStore: action.payload, currentStep: 3 };\r\n      }\r\n\r\n    case 'SET_DESTINATION_STORE':\r\n      // 🎯 매장 정보와 선택된 부서 정보 모두 처리\r\n      if (typeof action.payload === 'object' && action.payload.store) {\r\n        // payload가 { store, selectedDepartment, selectedDepartmentIndex } 형태인 경우\r\n        return { \r\n          ...state, \r\n          destinationStore: {\r\n            ...action.payload.store,\r\n            selectedDepartment: action.payload.selectedDepartment,\r\n            selectedDepartmentIndex: action.payload.selectedDepartmentIndex\r\n          }, \r\n          currentStep: 4 \r\n        };\r\n      } else {\r\n        // payload가 단순히 store 객체인 경우 (기존 호환성)\r\n        return { ...state, destinationStore: action.payload, currentStep: 4 };\r\n      }\r\n\r\n    case 'SET_DELIVERY_INFO':\r\n      return { ...state, deliveryInfo: action.payload };\r\n\r\n    case 'SET_STEP':\r\n      return { ...state, currentStep: action.payload };\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      return { ...state, isAuthenticated: true, user: action.payload };\r\n\r\n    case 'LOGOUT':\r\n      return { ...state, isAuthenticated: false, user: null };\r\n\r\n    case 'RESET':\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const DeliveryProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(deliveryReducer, initialState);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            user: {\r\n              id: 1,\r\n              email: credentials.email,\r\n              name: '사용자',\r\n              role: 'business'\r\n            },\r\n            token: 'fake-jwt-token'\r\n          });\r\n        }, 1000);\r\n      });\r\n\r\n      if (credentials.rememberMe) {\r\n        localStorage.setItem('token', response.token);\r\n      } else {\r\n        sessionStorage.setItem('token', response.token);\r\n      }\r\n\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: response.user });\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  // 🎯 헬퍼 함수들 추가\r\n  const setOriginStore = (store, selectedDepartment = null, selectedDepartmentIndex = null) => {\r\n    dispatch({\r\n      type: 'SET_ORIGIN_STORE',\r\n      payload: {\r\n        store,\r\n        selectedDepartment,\r\n        selectedDepartmentIndex\r\n      }\r\n    });\r\n  };\r\n\r\n  const setDestinationStore = (store, selectedDepartment = null, selectedDepartmentIndex = null) => {\r\n    dispatch({\r\n      type: 'SET_DESTINATION_STORE',\r\n      payload: {\r\n        store,\r\n        selectedDepartment,\r\n        selectedDepartmentIndex\r\n      }\r\n    });\r\n  };\r\n\r\n  const contextValue = useMemo(() => ({\r\n    ...state,\r\n    dispatch,\r\n    login,\r\n    logout,\r\n    setOriginStore,     // 👈 헬퍼 함수 추가\r\n    setDestinationStore // 👈 헬퍼 함수 추가\r\n  }), [state]);\r\n\r\n  return (\r\n    <DeliveryContext.Provider value={contextValue}>\r\n      {children}\r\n    </DeliveryContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDelivery = () => {\r\n  const context = useContext(DeliveryContext);\r\n  \r\n  if (!context) {\r\n    throw new Error(\r\n      '🚨 useDelivery must be used within DeliveryProvider!\\n' +\r\n      '💡 Wrap your component with <DeliveryProvider>...</DeliveryProvider>'\r\n    );\r\n  }\r\n  \r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}