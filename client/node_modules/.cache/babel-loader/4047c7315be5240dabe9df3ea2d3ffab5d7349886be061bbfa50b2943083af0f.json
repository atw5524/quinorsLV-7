{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\quinorslv\\\\quinors-app-frontend\\\\client\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: false,\n  error: null,\n  token: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case 'RESTORE_SESSION':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï†ÄÏû•Îêú Ïù∏Ï¶ù Ï†ïÎ≥¥ Î≥µÏõê\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const userInfo = localStorage.getItem('userInfo');\n    if (token && userInfo) {\n      try {\n        const parsedUserInfo = JSON.parse(userInfo);\n        dispatch({\n          type: 'RESTORE_SESSION',\n          payload: {\n            user: parsedUserInfo,\n            token: token\n          }\n        });\n        console.log('‚úÖ ÏÑ∏ÏÖò Î≥µÏõê ÏÑ±Í≥µ:', parsedUserInfo.managerName);\n      } catch (error) {\n        console.error('ÏÑ∏ÏÖò Î≥µÏõê Ïò§Î•ò:', error);\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('userInfo');\n      }\n    }\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      console.log('üîê Î°úÍ∑∏Ïù∏ ÏãúÎèÑ:', {\n        userId: credentials.username\n      });\n\n      // ÏÑúÎ≤Ñ ÏÉÅÌÉú ÌôïÏù∏\n      const healthResponse = await fetch('https://quinors-lv-backend.ngrok.io/api/health');\n      if (!healthResponse.ok) {\n        throw new Error('ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§.');\n      }\n\n      // Î°úÍ∑∏Ïù∏ API Ìò∏Ï∂ú\n      const response = await fetch('https://quinors-lv-backend.ngrok.io/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: credentials.username,\n          password: credentials.password\n        })\n      });\n      const result = await response.json();\n      console.log('üì® Î°úÍ∑∏Ïù∏ ÏùëÎãµ:', result);\n      if (response.ok && result.success) {\n        const {\n          token,\n          user\n        } = result.data;\n\n        // ÌÜ†ÌÅ∞Í≥º ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï†ÄÏû•\n        if (credentials.rememberMe) {\n          localStorage.setItem('authToken', token);\n          localStorage.setItem('userInfo', JSON.stringify(user));\n        } else {\n          sessionStorage.setItem('authToken', token);\n          sessionStorage.setItem('userInfo', JSON.stringify(user));\n        }\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            user,\n            token\n          }\n        });\n        console.log('‚úÖ Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ:', user.managerName);\n        return {\n          user,\n          token\n        };\n      } else {\n        // ÌäπÎ≥ÑÌïú ÏóêÎü¨ ÏºÄÏù¥Ïä§ Ï≤òÎ¶¨\n        if (response.status === 423) {\n          throw new Error(`Í≥ÑÏ†ïÏù¥ Ïû†Í≤®ÏûàÏäµÎãàÎã§.\\nÏû†Í∏à Ìï¥Ï†ú: ${new Date(result.lockedUntil).toLocaleString('ko-KR')}`);\n        } else if (result.remainingAttempts !== undefined) {\n          throw new Error(`${result.message}\\nÎÇ®ÏùÄ ÏãúÎèÑ ÌöüÏàò: ${result.remainingAttempts}Ìöå`);\n        } else {\n          throw new Error(result.message || 'Î°úÍ∑∏Ïù∏Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');\n        }\n      }\n    } catch (error) {\n      console.error('‚ùå Î°úÍ∑∏Ïù∏ Ïò§Î•ò:', error);\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userInfo');\n    sessionStorage.removeItem('authToken');\n    sessionStorage.removeItem('userInfo');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    console.log('üö™ Î°úÍ∑∏ÏïÑÏõÉ ÏôÑÎ£å');\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n\n  // ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω Ìï®Ïàò\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const token = state.token || localStorage.getItem('authToken');\n      const response = await fetch('https://quinors-lv-backend.ngrok.io/api/auth/change-password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword,\n          newPassword\n        })\n      });\n      const result = await response.json();\n      if (response.ok && result.success) {\n        return result;\n      } else {\n        throw new Error(result.message || 'ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤ΩÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');\n      }\n    } catch (error) {\n      console.error('ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω Ïò§Î•ò:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      logout,\n      clearError,\n      changePassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","isAuthenticated","user","loading","error","token","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","localStorage","getItem","userInfo","parsedUserInfo","JSON","parse","console","log","managerName","removeItem","login","credentials","userId","username","healthResponse","fetch","ok","Error","response","method","headers","body","stringify","password","result","json","success","data","rememberMe","setItem","sessionStorage","status","Date","lockedUntil","toLocaleString","remainingAttempts","undefined","message","logout","clearError","changePassword","currentPassword","newPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/project/quinorslv/quinors-app-frontend/client/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n  token: null\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'LOGIN_FAILURE':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'RESTORE_SESSION':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï†ÄÏû•Îêú Ïù∏Ï¶ù Ï†ïÎ≥¥ Î≥µÏõê\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    \r\n    if (token && userInfo) {\r\n      try {\r\n        const parsedUserInfo = JSON.parse(userInfo);\r\n        dispatch({\r\n          type: 'RESTORE_SESSION',\r\n          payload: {\r\n            user: parsedUserInfo,\r\n            token: token\r\n          }\r\n        });\r\n        console.log('‚úÖ ÏÑ∏ÏÖò Î≥µÏõê ÏÑ±Í≥µ:', parsedUserInfo.managerName);\r\n      } catch (error) {\r\n        console.error('ÏÑ∏ÏÖò Î≥µÏõê Ïò§Î•ò:', error);\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userInfo');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    \r\n    try {\r\n      console.log('üîê Î°úÍ∑∏Ïù∏ ÏãúÎèÑ:', { userId: credentials.username });\r\n\r\n      // ÏÑúÎ≤Ñ ÏÉÅÌÉú ÌôïÏù∏\r\n      const healthResponse = await fetch('https://quinors-lv-backend.ngrok.io/api/health');\r\n      if (!healthResponse.ok) {\r\n        throw new Error('ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§.');\r\n      }\r\n\r\n      // Î°úÍ∑∏Ïù∏ API Ìò∏Ï∂ú\r\n      const response = await fetch('https://quinors-lv-backend.ngrok.io/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: credentials.username,\r\n          password: credentials.password\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      console.log('üì® Î°úÍ∑∏Ïù∏ ÏùëÎãµ:', result);\r\n\r\n      if (response.ok && result.success) {\r\n        const { token, user } = result.data;\r\n        \r\n        // ÌÜ†ÌÅ∞Í≥º ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï†ÄÏû•\r\n        if (credentials.rememberMe) {\r\n          localStorage.setItem('authToken', token);\r\n          localStorage.setItem('userInfo', JSON.stringify(user));\r\n        } else {\r\n          sessionStorage.setItem('authToken', token);\r\n          sessionStorage.setItem('userInfo', JSON.stringify(user));\r\n        }\r\n        \r\n        dispatch({\r\n          type: 'LOGIN_SUCCESS',\r\n          payload: { user, token }\r\n        });\r\n        \r\n        console.log('‚úÖ Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ:', user.managerName);\r\n        return { user, token };\r\n      } else {\r\n        // ÌäπÎ≥ÑÌïú ÏóêÎü¨ ÏºÄÏù¥Ïä§ Ï≤òÎ¶¨\r\n        if (response.status === 423) {\r\n          throw new Error(`Í≥ÑÏ†ïÏù¥ Ïû†Í≤®ÏûàÏäµÎãàÎã§.\\nÏû†Í∏à Ìï¥Ï†ú: ${new Date(result.lockedUntil).toLocaleString('ko-KR')}`);\r\n        } else if (result.remainingAttempts !== undefined) {\r\n          throw new Error(`${result.message}\\nÎÇ®ÏùÄ ÏãúÎèÑ ÌöüÏàò: ${result.remainingAttempts}Ìöå`);\r\n        } else {\r\n          throw new Error(result.message || 'Î°úÍ∑∏Ïù∏Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Î°úÍ∑∏Ïù∏ Ïò§Î•ò:', error);\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: error.message\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userInfo');\r\n    sessionStorage.removeItem('authToken');\r\n    sessionStorage.removeItem('userInfo');\r\n    dispatch({ type: 'LOGOUT' });\r\n    console.log('üö™ Î°úÍ∑∏ÏïÑÏõÉ ÏôÑÎ£å');\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  // ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω Ìï®Ïàò\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      const token = state.token || localStorage.getItem('authToken');\r\n      const response = await fetch('https://quinors-lv-backend.ngrok.io/api/auth/change-password', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          currentPassword,\r\n          newPassword\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok && result.success) {\r\n        return result;\r\n      } else {\r\n        throw new Error(result.message || 'ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤ΩÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');\r\n      }\r\n    } catch (error) {\r\n      console.error('ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω Ïò§Î•ò:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      ...state,\r\n      login,\r\n      logout,\r\n      clearError,\r\n      changePassword\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}